// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/bio-routing/tflow3/pkg/flow/flow.proto

package flow

import (
	fmt "fmt"
	api "github.com/bio-routing/bio-rd/net/api"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IPAddress struct {
	Addr                 *api.IP           `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Prefix               *Prefix           `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Metadata             map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *IPAddress) Reset()         { *m = IPAddress{} }
func (m *IPAddress) String() string { return proto.CompactTextString(m) }
func (*IPAddress) ProtoMessage()    {}
func (*IPAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_827e3cf7c8bdc54e, []int{0}
}

func (m *IPAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPAddress.Unmarshal(m, b)
}
func (m *IPAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPAddress.Marshal(b, m, deterministic)
}
func (m *IPAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPAddress.Merge(m, src)
}
func (m *IPAddress) XXX_Size() int {
	return xxx_messageInfo_IPAddress.Size(m)
}
func (m *IPAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_IPAddress.DiscardUnknown(m)
}

var xxx_messageInfo_IPAddress proto.InternalMessageInfo

func (m *IPAddress) GetAddr() *api.IP {
	if m != nil {
		return m.Addr
	}
	return nil
}

func (m *IPAddress) GetPrefix() *Prefix {
	if m != nil {
		return m.Prefix
	}
	return nil
}

func (m *IPAddress) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Prefix struct {
	Addr                 *api.Prefix       `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	OriginAsn            uint32            `protobuf:"varint,2,opt,name=origin_asn,json=originAsn,proto3" json:"origin_asn,omitempty"`
	NextAsn              uint32            `protobuf:"varint,3,opt,name=next_asn,json=nextAsn,proto3" json:"next_asn,omitempty"`
	Metadata             map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Prefix) Reset()         { *m = Prefix{} }
func (m *Prefix) String() string { return proto.CompactTextString(m) }
func (*Prefix) ProtoMessage()    {}
func (*Prefix) Descriptor() ([]byte, []int) {
	return fileDescriptor_827e3cf7c8bdc54e, []int{1}
}

func (m *Prefix) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Prefix.Unmarshal(m, b)
}
func (m *Prefix) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Prefix.Marshal(b, m, deterministic)
}
func (m *Prefix) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Prefix.Merge(m, src)
}
func (m *Prefix) XXX_Size() int {
	return xxx_messageInfo_Prefix.Size(m)
}
func (m *Prefix) XXX_DiscardUnknown() {
	xxx_messageInfo_Prefix.DiscardUnknown(m)
}

var xxx_messageInfo_Prefix proto.InternalMessageInfo

func (m *Prefix) GetAddr() *api.Prefix {
	if m != nil {
		return m.Addr
	}
	return nil
}

func (m *Prefix) GetOriginAsn() uint32 {
	if m != nil {
		return m.OriginAsn
	}
	return 0
}

func (m *Prefix) GetNextAsn() uint32 {
	if m != nil {
		return m.NextAsn
	}
	return 0
}

func (m *Prefix) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type ASN struct {
	Asn                  uint32            `protobuf:"varint,1,opt,name=asn,proto3" json:"asn,omitempty"`
	Metadata             map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ASN) Reset()         { *m = ASN{} }
func (m *ASN) String() string { return proto.CompactTextString(m) }
func (*ASN) ProtoMessage()    {}
func (*ASN) Descriptor() ([]byte, []int) {
	return fileDescriptor_827e3cf7c8bdc54e, []int{2}
}

func (m *ASN) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASN.Unmarshal(m, b)
}
func (m *ASN) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASN.Marshal(b, m, deterministic)
}
func (m *ASN) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASN.Merge(m, src)
}
func (m *ASN) XXX_Size() int {
	return xxx_messageInfo_ASN.Size(m)
}
func (m *ASN) XXX_DiscardUnknown() {
	xxx_messageInfo_ASN.DiscardUnknown(m)
}

var xxx_messageInfo_ASN proto.InternalMessageInfo

func (m *ASN) GetAsn() uint32 {
	if m != nil {
		return m.Asn
	}
	return 0
}

func (m *ASN) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type VRF struct {
	VrfId                uint64            `protobuf:"varint,1,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	Metadata             map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VRF) Reset()         { *m = VRF{} }
func (m *VRF) String() string { return proto.CompactTextString(m) }
func (*VRF) ProtoMessage()    {}
func (*VRF) Descriptor() ([]byte, []int) {
	return fileDescriptor_827e3cf7c8bdc54e, []int{3}
}

func (m *VRF) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VRF.Unmarshal(m, b)
}
func (m *VRF) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VRF.Marshal(b, m, deterministic)
}
func (m *VRF) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VRF.Merge(m, src)
}
func (m *VRF) XXX_Size() int {
	return xxx_messageInfo_VRF.Size(m)
}
func (m *VRF) XXX_DiscardUnknown() {
	xxx_messageInfo_VRF.DiscardUnknown(m)
}

var xxx_messageInfo_VRF proto.InternalMessageInfo

func (m *VRF) GetVrfId() uint64 {
	if m != nil {
		return m.VrfId
	}
	return 0
}

func (m *VRF) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Port struct {
	Port                 uint32            `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Metadata             map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Port) Reset()         { *m = Port{} }
func (m *Port) String() string { return proto.CompactTextString(m) }
func (*Port) ProtoMessage()    {}
func (*Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_827e3cf7c8bdc54e, []int{4}
}

func (m *Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Port.Unmarshal(m, b)
}
func (m *Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Port.Marshal(b, m, deterministic)
}
func (m *Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Port.Merge(m, src)
}
func (m *Port) XXX_Size() int {
	return xxx_messageInfo_Port.Size(m)
}
func (m *Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Port proto.InternalMessageInfo

func (m *Port) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Port) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Protocol struct {
	Protocol             uint32            `protobuf:"varint,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Metadata             map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Protocol) Reset()         { *m = Protocol{} }
func (m *Protocol) String() string { return proto.CompactTextString(m) }
func (*Protocol) ProtoMessage()    {}
func (*Protocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_827e3cf7c8bdc54e, []int{5}
}

func (m *Protocol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Protocol.Unmarshal(m, b)
}
func (m *Protocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Protocol.Marshal(b, m, deterministic)
}
func (m *Protocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Protocol.Merge(m, src)
}
func (m *Protocol) XXX_Size() int {
	return xxx_messageInfo_Protocol.Size(m)
}
func (m *Protocol) XXX_DiscardUnknown() {
	xxx_messageInfo_Protocol.DiscardUnknown(m)
}

var xxx_messageInfo_Protocol proto.InternalMessageInfo

func (m *Protocol) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *Protocol) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Flow struct {
	Agent                *IPAddress `protobuf:"bytes,1,opt,name=agent,proto3" json:"agent,omitempty"`
	Vrf                  *VRF       `protobuf:"bytes,13,opt,name=vrf,proto3" json:"vrf,omitempty"`
	SrcIp                *IPAddress `protobuf:"bytes,2,opt,name=src_ip,json=srcIp,proto3" json:"src_ip,omitempty"`
	DstIp                *IPAddress `protobuf:"bytes,3,opt,name=dst_ip,json=dstIp,proto3" json:"dst_ip,omitempty"`
	NextHopIp            *IPAddress `protobuf:"bytes,4,opt,name=next_hop_ip,json=nextHopIp,proto3" json:"next_hop_ip,omitempty"`
	Protocol             *Protocol  `protobuf:"bytes,10,opt,name=protocol,proto3" json:"protocol,omitempty"`
	SrcPort              *Port      `protobuf:"bytes,11,opt,name=src_port,json=srcPort,proto3" json:"src_port,omitempty"`
	DstPort              *Port      `protobuf:"bytes,12,opt,name=dst_port,json=dstPort,proto3" json:"dst_port,omitempty"`
	PacketsCount         uint64     `protobuf:"varint,20,opt,name=packets_count,json=packetsCount,proto3" json:"packets_count,omitempty"`
	BytesCount           uint64     `protobuf:"varint,21,opt,name=bytes_count,json=bytesCount,proto3" json:"bytes_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Flow) Reset()         { *m = Flow{} }
func (m *Flow) String() string { return proto.CompactTextString(m) }
func (*Flow) ProtoMessage()    {}
func (*Flow) Descriptor() ([]byte, []int) {
	return fileDescriptor_827e3cf7c8bdc54e, []int{6}
}

func (m *Flow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Flow.Unmarshal(m, b)
}
func (m *Flow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Flow.Marshal(b, m, deterministic)
}
func (m *Flow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Flow.Merge(m, src)
}
func (m *Flow) XXX_Size() int {
	return xxx_messageInfo_Flow.Size(m)
}
func (m *Flow) XXX_DiscardUnknown() {
	xxx_messageInfo_Flow.DiscardUnknown(m)
}

var xxx_messageInfo_Flow proto.InternalMessageInfo

func (m *Flow) GetAgent() *IPAddress {
	if m != nil {
		return m.Agent
	}
	return nil
}

func (m *Flow) GetVrf() *VRF {
	if m != nil {
		return m.Vrf
	}
	return nil
}

func (m *Flow) GetSrcIp() *IPAddress {
	if m != nil {
		return m.SrcIp
	}
	return nil
}

func (m *Flow) GetDstIp() *IPAddress {
	if m != nil {
		return m.DstIp
	}
	return nil
}

func (m *Flow) GetNextHopIp() *IPAddress {
	if m != nil {
		return m.NextHopIp
	}
	return nil
}

func (m *Flow) GetProtocol() *Protocol {
	if m != nil {
		return m.Protocol
	}
	return nil
}

func (m *Flow) GetSrcPort() *Port {
	if m != nil {
		return m.SrcPort
	}
	return nil
}

func (m *Flow) GetDstPort() *Port {
	if m != nil {
		return m.DstPort
	}
	return nil
}

func (m *Flow) GetPacketsCount() uint64 {
	if m != nil {
		return m.PacketsCount
	}
	return 0
}

func (m *Flow) GetBytesCount() uint64 {
	if m != nil {
		return m.BytesCount
	}
	return 0
}

func init() {
	proto.RegisterType((*IPAddress)(nil), "bio.tflow3.IPAddress")
	proto.RegisterMapType((map[string]string)(nil), "bio.tflow3.IPAddress.MetadataEntry")
	proto.RegisterType((*Prefix)(nil), "bio.tflow3.Prefix")
	proto.RegisterMapType((map[string]string)(nil), "bio.tflow3.Prefix.MetadataEntry")
	proto.RegisterType((*ASN)(nil), "bio.tflow3.ASN")
	proto.RegisterMapType((map[string]string)(nil), "bio.tflow3.ASN.MetadataEntry")
	proto.RegisterType((*VRF)(nil), "bio.tflow3.VRF")
	proto.RegisterMapType((map[string]string)(nil), "bio.tflow3.VRF.MetadataEntry")
	proto.RegisterType((*Port)(nil), "bio.tflow3.Port")
	proto.RegisterMapType((map[string]string)(nil), "bio.tflow3.Port.MetadataEntry")
	proto.RegisterType((*Protocol)(nil), "bio.tflow3.Protocol")
	proto.RegisterMapType((map[string]string)(nil), "bio.tflow3.Protocol.MetadataEntry")
	proto.RegisterType((*Flow)(nil), "bio.tflow3.Flow")
}

func init() {
	proto.RegisterFile("github.com/bio-routing/tflow3/pkg/flow/flow.proto", fileDescriptor_827e3cf7c8bdc54e)
}

var fileDescriptor_827e3cf7c8bdc54e = []byte{
	// 610 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x95, 0xd1, 0x6e, 0x12, 0x4d,
	0x14, 0xc7, 0xb3, 0xdd, 0x85, 0x2e, 0x67, 0x4b, 0xbe, 0x66, 0x02, 0x09, 0x1f, 0x49, 0x2d, 0x42,
	0x62, 0x88, 0xe8, 0xae, 0xb6, 0x31, 0xd1, 0x6a, 0x34, 0x68, 0x24, 0xee, 0x85, 0x0d, 0x99, 0x26,
	0xbd, 0xf0, 0x86, 0x2c, 0xbb, 0x0b, 0xdd, 0x40, 0x77, 0x26, 0xb3, 0x03, 0x2d, 0x4f, 0xe1, 0x85,
	0xbe, 0x81, 0x8f, 0xe1, 0x7b, 0xf8, 0x00, 0x3e, 0x89, 0x99, 0xb3, 0x2b, 0x5d, 0xa4, 0x54, 0x6f,
	0xb8, 0x81, 0x33, 0x73, 0xfe, 0x67, 0xe6, 0xf7, 0x9f, 0x99, 0x03, 0xf0, 0x74, 0x1c, 0xc9, 0x8b,
	0xd9, 0xd0, 0xf6, 0xd9, 0xa5, 0x33, 0x8c, 0xd8, 0x63, 0xc1, 0x66, 0x32, 0x8a, 0xc7, 0x8e, 0x1c,
	0x4d, 0xd9, 0xd5, 0xb1, 0xc3, 0x27, 0x63, 0x47, 0x45, 0xf8, 0x61, 0x73, 0xc1, 0x24, 0x23, 0x30,
	0x8c, 0x98, 0x9d, 0xe6, 0xeb, 0xce, 0x86, 0x72, 0x8c, 0x03, 0x27, 0x0e, 0xa5, 0xe3, 0xf1, 0x48,
	0x7d, 0xa7, 0xc5, 0xcd, 0x1f, 0x1a, 0x94, 0xdc, 0x7e, 0x37, 0x08, 0x44, 0x98, 0x24, 0xe4, 0x10,
	0x0c, 0x2f, 0x08, 0x44, 0x4d, 0x6b, 0x68, 0x6d, 0xeb, 0xc8, 0xb2, 0xd5, 0xca, 0x4a, 0xeb, 0xf6,
	0x29, 0x26, 0xc8, 0x43, 0x28, 0x72, 0x11, 0x8e, 0xa2, 0xeb, 0xda, 0x0e, 0x4a, 0x88, 0x7d, 0xb3,
	0xb9, 0xdd, 0xc7, 0x0c, 0xcd, 0x14, 0xe4, 0x0d, 0x98, 0x97, 0xa1, 0xf4, 0x02, 0x4f, 0x7a, 0x35,
	0xbd, 0xa1, 0xb7, 0xad, 0xa3, 0x56, 0x5e, 0xbd, 0xdc, 0xd5, 0xfe, 0x98, 0xa9, 0xde, 0xc7, 0x52,
	0x2c, 0xe8, 0xb2, 0xa8, 0xfe, 0x12, 0xca, 0x2b, 0x29, 0xb2, 0x0f, 0xfa, 0x24, 0x5c, 0x20, 0x5d,
	0x89, 0xaa, 0x90, 0x54, 0xa0, 0x30, 0xf7, 0xa6, 0xb3, 0x10, 0x71, 0x4a, 0x34, 0x1d, 0x9c, 0xec,
	0x3c, 0xd7, 0x9a, 0x3f, 0x35, 0x28, 0xa6, 0x40, 0xa4, 0xb5, 0xe2, 0xea, 0xbf, 0xa5, 0xab, 0x8c,
	0x37, 0x75, 0x76, 0x00, 0xc0, 0x44, 0x34, 0x8e, 0xe2, 0x81, 0x97, 0xc4, 0xb8, 0x5c, 0x99, 0x96,
	0xd2, 0x99, 0x6e, 0x12, 0x93, 0xff, 0xc1, 0x8c, 0xc3, 0x6b, 0x89, 0x49, 0x1d, 0x93, 0xbb, 0x6a,
	0xac, 0x52, 0xaf, 0x72, 0x3e, 0x0d, 0xf4, 0xd9, 0x58, 0x3f, 0x95, 0xed, 0x98, 0xfc, 0xac, 0x81,
	0xde, 0x3d, 0x3b, 0x55, 0x35, 0x0a, 0x4c, 0x43, 0x30, 0x15, 0x92, 0x17, 0x39, 0xa8, 0x1d, 0x84,
	0x3a, 0xc8, 0x43, 0x75, 0xcf, 0x4e, 0xb7, 0x43, 0xf4, 0x55, 0x03, 0xfd, 0x9c, 0xf6, 0x48, 0x15,
	0x8a, 0x73, 0x31, 0x1a, 0x44, 0x01, 0x96, 0x19, 0xb4, 0x30, 0x17, 0x23, 0x37, 0xf8, 0x1b, 0xd6,
	0x39, 0xed, 0x6d, 0x07, 0xeb, 0x8b, 0x06, 0x46, 0x9f, 0x09, 0x49, 0x08, 0x18, 0x9c, 0x09, 0x99,
	0x1d, 0x15, 0xc6, 0xe4, 0x64, 0x0d, 0xea, 0xde, 0xca, 0x05, 0x32, 0x21, 0xb7, 0x43, 0xf5, 0x4d,
	0x03, 0xb3, 0xaf, 0xda, 0xd0, 0x67, 0x53, 0x52, 0x07, 0x93, 0x67, 0x71, 0x46, 0xb7, 0x1c, 0x93,
	0xd7, 0x6b, 0x84, 0xcd, 0xd5, 0x27, 0x96, 0xea, 0xb6, 0x43, 0xf9, 0x5d, 0x07, 0xa3, 0x37, 0x65,
	0x57, 0xa4, 0x03, 0x05, 0x6f, 0x1c, 0xc6, 0x32, 0x6b, 0xa4, 0xea, 0xad, 0xdd, 0x4c, 0x53, 0x0d,
	0xb9, 0x0f, 0xfa, 0x5c, 0x8c, 0x6a, 0xe5, 0x5c, 0xcf, 0xdd, 0x5c, 0x32, 0x55, 0x39, 0xf2, 0x08,
	0x8a, 0x89, 0xf0, 0x07, 0x11, 0xcf, 0x7e, 0x4c, 0x36, 0x2d, 0x98, 0x08, 0xdf, 0xe5, 0x4a, 0x1d,
	0x24, 0x52, 0xa9, 0xf5, 0x3b, 0xd5, 0x41, 0x22, 0x5d, 0x4e, 0x9e, 0x81, 0x85, 0xfd, 0x7a, 0xc1,
	0xb8, 0x2a, 0x31, 0xee, 0x2a, 0x29, 0x29, 0xe5, 0x07, 0xc6, 0x5d, 0x4e, 0x9e, 0xe4, 0x2e, 0x01,
	0xb0, 0xa6, 0x72, 0xdb, 0x41, 0xe7, 0xae, 0xa6, 0x03, 0xa6, 0x32, 0x81, 0x8f, 0xca, 0xc2, 0x8a,
	0xfd, 0x3f, 0x1f, 0x0f, 0xdd, 0x4d, 0x84, 0x8f, 0xaf, 0xaf, 0x03, 0xa6, 0xf2, 0x80, 0xe2, 0xbd,
	0x4d, 0xe2, 0x20, 0x91, 0x28, 0x6e, 0x41, 0x99, 0x7b, 0xfe, 0x24, 0x94, 0xc9, 0xc0, 0x67, 0xb3,
	0x58, 0xd6, 0x2a, 0xd8, 0x49, 0x7b, 0xd9, 0xe4, 0x3b, 0x35, 0x47, 0x0e, 0xc1, 0x1a, 0x2e, 0x64,
	0xf8, 0x5b, 0x52, 0x45, 0x09, 0xe0, 0x14, 0x0a, 0xde, 0xb6, 0x3f, 0x3d, 0xf8, 0xb7, 0xbf, 0x94,
	0x61, 0x11, 0x3d, 0x1d, 0xff, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x72, 0x2b, 0xe8, 0x6b, 0x83, 0x06,
	0x00, 0x00,
}
